{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tienp\\\\OneDrive\\\\Ta\\u0300i li\\xEA\\u0323u\\\\HK211\\\\Data Base\\\\Lab\\\\ass2\\\\client\\\\src\\\\router\\\\manager\\\\patient\\\\patientDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport './patientDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PatientDetail = () => {\n  _s();\n\n  const [Pcode, setPcode] = useState(localStorage.getItem('Pcode'));\n  const [patient, setPatient] = useState({\n    P_Type: '',\n    P_fname: '',\n    P_lname: '',\n    P_dob: '',\n    P_gender: '',\n    P_phone: ''\n  }); // get patient info\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/patient/getOne', {\n      params: {\n        Pcode: Pcode\n      }\n    }).then(res => {\n      setPatient(res.data[0]);\n      setCheckup(res.data[0].P_Type);\n    });\n  }, []); // get Treatment if Inpatient\n  // get Examination if Outpatient\n\n  const [examList, setExamList] = useState([]);\n  const [treatmentList, setTreatmentList] = useState([]);\n\n  const setCheckup = paType => {\n    if (paType === 'IP') {\n      Axios.get('http://localhost:3001/api/inpatient/getOne', {\n        params: {\n          Pcode: Pcode\n        }\n      }).then(res => {\n        let newPatient = Object.assign(patient, res.data[0]);\n        setPatient(newPatient);\n      });\n      Axios.get('http://localhost:3001/api/treatment/getAll', {\n        params: {\n          Pcode: Pcode\n        }\n      }).then(res => {\n        setTreatmentList(res.data);\n      });\n    } else {\n      Axios.get('http://localhost:3001/api/examination/getAll', {\n        params: {\n          Pocode: Pcode\n        }\n      }).then(res => {\n        setExamList(res.data);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientDetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patientInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Patient Type :\", patient.P_Type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: patient.P_Type == 'IP' ? `Doc code:${patient.Doc_code}` : ``\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: patient.P_Type == 'OP' ? `Nurse code:${patient.Nurse_code}` : ``\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Name: \", patient.P_fname + ' ' + patient.P_lname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"DOB: \", patient.P_dob]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Gender: \", patient.P_gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Phone: \", patient.P_phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkupInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"checkupTitle\",\n        children: \"Checkup List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: examList.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkupList\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Fee:\", val.O_fee]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Date: \", val.Exam_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Diagnosis: \", val.O_diagnosis]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Next exam date: \", val.Next_exam_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"DoctorID: \", val.Doc_code]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: treatmentList.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkupList\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Fee: \", patient.I_fee]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Start Date: \", val.T_start_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"End Date: \", val.T_end_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Result: \", val.Result]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PatientDetail, \"1BgymLVa+cM5rCJZXoyLUD1CmA4=\");\n\n_c = PatientDetail;\nexport default PatientDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientDetail\");","map":{"version":3,"sources":["C:/Users/tienp/OneDrive/Tài liệu/HK211/Data Base/Lab/ass2/client/src/router/manager/patient/patientDetail.js"],"names":["React","useState","useEffect","Link","Axios","PatientDetail","Pcode","setPcode","localStorage","getItem","patient","setPatient","P_Type","P_fname","P_lname","P_dob","P_gender","P_phone","get","params","then","res","data","setCheckup","examList","setExamList","treatmentList","setTreatmentList","paType","newPatient","Object","assign","Pocode","Doc_code","Nurse_code","map","val","O_fee","Exam_date","O_diagnosis","Next_exam_date","I_fee","T_start_date","T_end_date","Result"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Axios from \"axios\"\r\n\r\nimport './patientDetail.css'\r\nconst PatientDetail = () => {\r\n    const [Pcode, setPcode] = useState(localStorage.getItem('Pcode'))\r\n    const [patient, setPatient] = useState({\r\n        P_Type:'',\r\n        P_fname: '', P_lname: '',\r\n        P_dob: '', P_gender: '', P_phone: '',\r\n    })\r\n\r\n    // get patient info\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/patient/getOne', {\r\n            params:{\r\n                Pcode: Pcode\r\n            }\r\n        }).then((res) => {\r\n            setPatient(res.data[0])\r\n            setCheckup(res.data[0].P_Type)\r\n        })\r\n    }, [])\r\n\r\n    // get Treatment if Inpatient\r\n    // get Examination if Outpatient\r\n    const [examList, setExamList] = useState([])\r\n    const [treatmentList, setTreatmentList] = useState([])\r\n    const setCheckup = (paType) => {\r\n        \r\n        if(paType === 'IP'){\r\n            Axios.get('http://localhost:3001/api/inpatient/getOne', {\r\n                params:{\r\n                    Pcode: Pcode\r\n                }\r\n            }).then((res) => {\r\n                let newPatient = Object.assign(patient, res.data[0])\r\n                setPatient(newPatient)\r\n            })\r\n\r\n            Axios.get('http://localhost:3001/api/treatment/getAll', {\r\n                params:{\r\n                    Pcode: Pcode\r\n                }\r\n            }).then((res) => {\r\n                setTreatmentList(res.data)\r\n            })\r\n\r\n        } else {\r\n            Axios.get('http://localhost:3001/api/examination/getAll', {\r\n                params:{\r\n                    Pocode: Pcode\r\n                }\r\n            }).then((res) => {\r\n                setExamList(res.data)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    return(\r\n        <div className='patientDetail'>\r\n            <div className='patientInfo'>\r\n                <h2>Patient Detail</h2>\r\n                <div>\r\n                    Patient Type :\r\n                    {patient.P_Type}\r\n                </div>\r\n\r\n                <div>\r\n                    {(patient.P_Type == 'IP') ? `Doc code:${patient.Doc_code}` : ``}\r\n                </div>\r\n\r\n                <div>\r\n                    {(patient.P_Type == 'OP') ? `Nurse code:${patient.Nurse_code}` : ``}\r\n                </div>\r\n\r\n                <div>\r\n                    Name: {patient.P_fname + ' ' + patient.P_lname}\r\n                </div>\r\n\r\n                <div>\r\n                    DOB: {patient.P_dob}\r\n                </div>\r\n\r\n                <div>\r\n                    Gender: {patient.P_gender}\r\n                </div>\r\n                <div>\r\n                    Phone: {patient.P_phone}\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            <div className = 'checkupInfo'>\r\n                <h2 className = 'checkupTitle'>Checkup List</h2>\r\n\r\n                <div>\r\n                    {examList.map((val) => {\r\n                        return (\r\n                            <div className='checkupList'>\r\n                                <div>\r\n                                    Fee:{val.O_fee}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    Date: {val.Exam_date}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    Diagnosis: {val.O_diagnosis}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    Next exam date: {val.Next_exam_date}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    DoctorID: {val.Doc_code}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div>\r\n                    {treatmentList.map((val) => {\r\n                        return (\r\n                            <div className='checkupList'>\r\n                                <div>\r\n                                    Fee: {patient.I_fee}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    Start Date: {val.T_start_date}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    End Date: {val.T_end_date}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    Result: {val.Result}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientDetail"]},"metadata":{},"sourceType":"module"}