{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\HK211\\\\DataBase\\\\Lab\\\\ass2\\\\client\\\\src\\\\router\\\\manager\\\\patient\\\\patientDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PatientDetail = () => {\n  _s();\n\n  const [Pcode, setPcode] = useState(localStorage.getItem('Pcode'));\n  const [patient, setPatient] = useState({\n    P_fname: '',\n    P_lname: '',\n    P_dob: '',\n    P_gender: '',\n    P_phone: ''\n  });\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/patient/getOne', {\n      params: {\n        Pcode: Pcode\n      }\n    }).then(res => {\n      setPatient(res.data[0]);\n    });\n  }, []);\n  const [examList, setExamList] = useState([]);\n  useEffect(() => {\n    const paType = Pcode.substring(0, 2);\n\n    if (paType == 'IP') {\n      Axios.get('http://localhost:3001/api/treatment/get', {\n        params: {\n          Pcode: Pcode\n        }\n      }).then(res => {});\n    } else {\n      Axios.get('http://localhost:3001/api/examination/getAll', {\n        params: {\n          Pocode: Pcode\n        }\n      }).then(res => {\n        setExamList(res.data);\n      });\n    }\n  }, []);\n\n  const inpatientRender = () => {\n    examList.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Fee:\", val.O_fee, \"Date: \", val.Exam_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Name: \", patient.P_fname + ' ' + patient.P_lname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"DOB: \", patient.P_dob, \"Gender: \", patient.P_gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Phone: \", patient.P_phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Checkup List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), examList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Fee:\", val.O_fee, \"Date: \", val.Exam_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PatientDetail, \"si3pJQgUicoGfbLKkGh+jInPxc4=\");\n\n_c = PatientDetail;\nexport default PatientDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientDetail\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/HK211/DataBase/Lab/ass2/client/src/router/manager/patient/patientDetail.js"],"names":["React","useState","useEffect","Link","Axios","PatientDetail","Pcode","setPcode","localStorage","getItem","patient","setPatient","P_fname","P_lname","P_dob","P_gender","P_phone","get","params","then","res","data","examList","setExamList","paType","substring","Pocode","inpatientRender","map","val","O_fee","Exam_date"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Axios from \"axios\"\r\n\r\nconst PatientDetail = () => {\r\n    const [Pcode, setPcode] = useState(localStorage.getItem('Pcode'))\r\n    const [patient, setPatient] = useState({\r\n        P_fname: '', P_lname: '',\r\n        P_dob: '', P_gender: '', P_phone: ''\r\n    })\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/patient/getOne', {\r\n            params:{\r\n                Pcode: Pcode\r\n            }\r\n        }).then((res) => {\r\n            setPatient(res.data[0])\r\n        })\r\n    }, [])\r\n\r\n    const [examList, setExamList] = useState([])\r\n    useEffect(() => {\r\n        const paType = Pcode.substring(0,2)\r\n        \r\n        if(paType == 'IP'){\r\n            Axios.get('http://localhost:3001/api/treatment/get', {\r\n                params:{\r\n                    Pcode: Pcode\r\n                }\r\n            }).then((res) => {\r\n                \r\n            })\r\n        } else {\r\n            Axios.get('http://localhost:3001/api/examination/getAll', {\r\n                params:{\r\n                    Pocode: Pcode\r\n                }\r\n            }).then((res) => {\r\n                setExamList(res.data)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const inpatientRender = () => {\r\n        examList.map((val) => {\r\n            return (\r\n                <div>\r\n                    Fee:{val.O_fee}\r\n                    Date: {val.Exam_date}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <h2>Patient Detail</h2>\r\n\r\n                <div>\r\n                    Name: {patient.P_fname + ' ' + patient.P_lname}\r\n                </div>\r\n\r\n                <div>\r\n                    DOB: {patient.P_dob}\r\n                    Gender: {patient.P_gender}\r\n                </div>\r\n\r\n                <div>\r\n                    Phone: {patient.P_phone}\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>Checkup List</h2>\r\n                {examList.map((val) => {\r\n                    return (\r\n                        <div>\r\n                            Fee:{val.O_fee}\r\n                            Date: {val.Exam_date}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientDetail"]},"metadata":{},"sourceType":"module"}